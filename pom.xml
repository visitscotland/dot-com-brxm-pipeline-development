<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.visitscotland</groupId>
    <artifactId>brxm-parent-enterprise-pom</artifactId>
    <version>1.0</version>
    <relativePath>brxm-pom.xml</relativePath>
  </parent>

  <name>www.visitscotland.com CMS Pages</name>
  <description>www.visitscotland.com CMS Pages</description>
  <artifactId>dot-com-brxm-pipeline-development</artifactId>
  <version>2.5.11-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <!-- Project properties -->
    <nexus.repo>https://repo.visitscotland.com/nexus2/</nexus.repo>
    <dist.descriptor>distribution.xml</dist.descriptor>

    <hippo.cms.locales>nl,de,fr,es,zh</hippo.cms.locales>
    <cliOptions></cliOptions>

    <!-- BloomReach Dependencies -->
    <!-- Documentation: https://bloomreach-forge.github.io/external-document-picker/index.html -->
    <forge.exdocpickerbase.version>8.0.0</forge.exdocpickerbase.version>
    <!-- Documentation: https://bloomreach-forge.github.io/breadcrumb/ -->
    <forge.breadcrumb.version>5.0.0</forge.breadcrumb.version>

    <!-- Test dependencies -->
    <junit.jupiter.version>5.11.2</junit.jupiter.version>
    <easymock.version>5.4.0</easymock.version>
    <mockito.version>5.2.0</mockito.version>
    <assertj.version>3.26.3</assertj.version>

  </properties>

  <organization>
    <name>VisitScotland</name>
    <url>https://www.visitscotland.org/</url>
  </organization>
  <inceptionYear>2019</inceptionYear>
  <mailingLists>
    <mailingList/>
  </mailingLists>
  <contributors>
    <contributor/>
  </contributors>
  <issueManagement/>
  <developers>
    <developer/>
  </developers>

  <licenses>
    <license>
      <name>All Rights Reserved</name>
      <distribution>none</distribution>
    </license>
  </licenses>

  <!-- This configuration might be used by SonarQube or Continuum -->
  <ciManagement>
    <system>Jenkins</system>
    <url>https://jenkins.visitscotland.com/</url>
  </ciManagement>

  <!-- vs.repo and vs.snapshot are defined in settings.xml in the developer machine -->
  <!-- This configuration is provided by VisitScotland to each developer -->
  <distributionManagement>
    <repository>
      <id>vs</id>
      <url>${vs.repo}</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <url>${vs.snapshots}</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <!-- VisitScotland Dependencies -->
      <dependency>
        <groupId>com.visitscotland</groupId>
        <artifactId>data-service-api</artifactId>
        <version>1.3.2</version>
        <exclusions>
          <exclusion>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.visitscotland</groupId>
        <artifactId>utils</artifactId>
        <version>3.0.1</version>
      </dependency>

      <dependency>
        <groupId>org.onehippo.forge.exdocpickerbase</groupId>
        <artifactId>exdocpickerbase-field</artifactId>
        <version>${forge.exdocpickerbase.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.taglibs</groupId>
        <artifactId>taglibs-standard-impl</artifactId>
        <version>${taglibs.version}</version>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-jaxb-annotations</artifactId>
      </dependency>

      <dependency>
        <!-- This dependency was introduced on version 15.x of BloomReach CMS to resolve an issue that only affected
           cloud Environments. This dependency is not needed for our implementation, so it should be evaluated if it
           can be removed once we upgrade to version 16.x -->
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>5.0.1</version>
      </dependency>

      <!-- Test Dependencies -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <defaultGoal>package</defaultGoal>

    <pluginManagement>
      <plugins>
        <!-- OWASP Dependency check. It is used by the Pipeline to report on security vulnerabilities -->
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>10.0.4</version>
          <configuration>
            <outputDirectory>report/owasp</outputDirectory>
            <suppressionFiles>
              <file>src/main/resources/suppressed-cves.xml</file>
            </suppressionFiles>

            <excludes>
              <!-- Note: we could have included the project dependency located at
              [project-name]-essentials, but we included these dependencies instead so the
              configuration can be copied to other projects -->
              <exclude>org.onehippo.cms7:hippo-essentials-dashboard</exclude>
              <exclude>org.onehippo.cms7:hippo-essentials-dashboard-dependencies</exclude>
            </excludes>

            <!-- JavaScript Dependencies are resolved via Node -->
            <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
            <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
            <yarnAuditAnalyzerEnabled>false</yarnAuditAnalyzerEnabled>
            <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
            <formats>
              <format>HTML</format>
              <format>XML</format>
            </formats>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Generates the buildnumber -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${maven.plugin.buildnumber.version}</version>

          <configuration>
            <shortRevisionLength>8</shortRevisionLength>
            <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
          </configuration>

          <executions>
            <!-- This execution has been replicated from hippo-cms7-project-31.1.0 -->
            <execution>
              <id>default</id>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
              <configuration>
                <skip>true</skip>
              </configuration>
            </execution>
            <!-- This is the standard VS execution -->
            <execution>
              <id>buildNumberCreation</id>
              <phase>validate</phase>
              <goals>
                <goal>create-timestamp</goal>
              </goals>
              <configuration>
                <timestampFormat>yyMMddHHmmss</timestampFormat>
                <timestampPropertyName>project.buildNo</timestampPropertyName>
                <timezone>UTC</timezone>
              </configuration>
            </execution>
          </executions>
        </plugin>


        <!-- Ensures the proper Gitflow Use for releases -->
        <!-- Documentation: https://github.com/aleksandr-m/gitflow-maven-plugin -->
        <plugin>
          <groupId>com.amashchenko.maven.plugin</groupId>
          <artifactId>gitflow-maven-plugin</artifactId>
          <version>1.21.0</version>
          <executions>
            <execution>
              <id>default-cli</id>
              <goals>
                <goal>release-start</goal>
                <goal>hotfix-start</goal>
              </goals>
              <configuration>
                <pushRemote>true</pushRemote>
                <allowSnapshots>true</allowSnapshots>

                <gitFlowConfig>
                  <productionBranch>main</productionBranch>
                </gitFlowConfig>

                <commitMessages>
                  <releaseStartMessage>Created release branch @{version}</releaseStartMessage>
                  <releaseFinishMessage>Merged release branch and updated to next development version.</releaseFinishMessage>
                  <tagReleaseMessage>Tag release @{version}</tagReleaseMessage>

                  <hotfixStartMessage>Created emergency release branch @{version}</hotfixStartMessage>
                  <hotfixFinishMessage>Merged emergency release branch and updated to next development version.</hotfixFinishMessage>
                  <tagHotfixMessage>Tag emergency release @{version}</tagHotfixMessage>
                </commitMessages>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Allows the Gitflow plugin to make commits to the SCM -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <executions>
            <execution>
              <id>default-cli</id>
              <goals>
                <goal>checkin</goal>
              </goals>
              <configuration>
                <connectionType>connection</connectionType>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Searches the pom for all -SNAPSHOT versions which have been released and replaces them with the corresponding release version -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>default-cli</id>
              <goals>
                <goal>use-releases</goal>
              </goals>
              <configuration>
                <generateBackupPoms>false</generateBackupPoms>
                <failIfNotReplaced>true</failIfNotReplaced>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Adds the entries to the Manifest Files -->
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven.plugin.war.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Build-Number>${project.buildNo}</Build-Number>
                <Build-Date>${maven.build.timestamp}</Build-Date>
                <Hippo-Release-Version>${hippo.release.version}</Hippo-Release-Version>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>jrebel</name>
        </property>
      </activation>
      <properties>
        <spring.profiles.active>${cliOptions}</spring.profiles.active>
      </properties>
      <modules>
        <module>ui-integration</module>
        <module>cms-dependencies</module>
        <module>repository-data</module>
        <module>cms</module>
        <module>site</module>
        <module>essentials</module>
      </modules>
    </profile>

    <profile>
      <id>dist</id>
      <dependencies>
        <dependency>
          <groupId>jakarta.xml.bind</groupId>
          <artifactId>jakarta.xml.bind-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>jakarta.xml.ws</groupId>
          <artifactId>jakarta.xml.ws-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>jakarta.activation</groupId>
          <artifactId>jakarta.activation-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.glassfish.jaxb</groupId>
          <artifactId>jaxb-runtime</artifactId>
          <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <defaultGoal>validate</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>distro-assembly</id>
                <phase>validate</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/distribution.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>dist-with-development-data</id>
      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${h2.database.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <defaultGoal>validate</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>distro-assembly-with-development-data</id>
                <phase>validate</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/distribution-with-development-data.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <scm>
    <connection>scm:git:https://github.com/visitscotland/dot-com-brxm-pipeline-development</connection>
    <developerConnection/>
    <url/>
  </scm>
</project>
